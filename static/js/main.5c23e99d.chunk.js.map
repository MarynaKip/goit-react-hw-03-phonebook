{"version":3,"sources":["components/Contacts/index.jsx","components/ContactItem/index.jsx","components/ContactList/index.jsx","App.js","index.js"],"names":["initialState","id","name","number","Contacts","onSubmit","useState","state","setState","handleChange","e","prevState","target","value","preventDefault","newItem","uuidv4","Number","type","onChange","pattern","title","required","useStyles","createUseStyles","item","display","marginBottom","alignItems","ContactItem","contact","onClick","classes","className","list","listStyle","margin","padding","ContactList","contacts","map","App","alert","useAlert","setContacts","filter","setFilter","useEffect","storageContacts","localStorage","getItem","JSON","parse","setItem","stringify","contactsArr","toLowerCase","includes","newContact","some","show","newContactList","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c23e99d.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Contacts = ({ onSubmit }) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { name, number } = state;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      id: uuidv4(), // uuid\r\n      name,\r\n      number: Number(number),\r\n    };\r\n\r\n    onSubmit(newItem);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">+ Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    alignItems: \"flex-start\",\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contact, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <li key={contact.id} className={classes.item}>\r\n      {contact.name}\r\n      {contact.number}\r\n      <button id={contact.id} type=\"button\" onClick={onClick}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    number: PropTypes.number.isRequired,\r\n  }),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nconst ContactList = ({ contacts, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {contacts.map((contact) => (\r\n        <ContactItem contact={contact} onClick={onClick} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default ContactList;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport ContactList from \"./components/ContactList\";\r\n\r\nconst App = () => {\r\n  const alert = useAlert();\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const storageContacts = localStorage.getItem(\"contacts\");\r\n    setContacts(JSON.parse(storageContacts));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  });\r\n\r\n  const handleFilter = ({ target }) => setFilter(target.value);\r\n\r\n  const contactsArr = contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  const handleAddContact = (newContact) => {\r\n    if (contacts.some((contact) => contact.name === newContact.name)) {\r\n      alert.show(`Contact is already in contscts.`);\r\n      return;\r\n    }\r\n    setContacts((prevState) => [...prevState, newContact]);\r\n  };\r\n\r\n  const handleDeleteItem = ({ target }) => {\r\n    const newContactList = contacts.filter(\r\n      (contact) => target.id !== contact.id\r\n    );\r\n    setContacts([...newContactList]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span>Find:</span>\r\n      <input type=\"text\" value={filter} name=\"filter\" onChange={handleFilter} />\r\n\r\n      <Contacts onSubmit={handleAddContact} />\r\n\r\n      <ContactList contacts={contactsArr} onClick={handleDeleteItem} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import \"./index.css\";\r\n// import App from \"./App\";\r\n\r\n// ReactDOM.render(\r\n//   <App />,\r\n\r\n//   document.getElementById(\"root\")\r\n// );\r\n// index.js\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport App from \"./App\";\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000,\r\n  offset: \"30px\",\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nconst Root = () => (\r\n  <AlertProvider template={AlertTemplate} {...options}>\r\n    <App />\r\n  </AlertProvider>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}